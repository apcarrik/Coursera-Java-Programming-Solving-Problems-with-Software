#BlueJ class context
comment0.target=BabyNames
comment1.params=fr\ mode
comment1.target=int\ totalBirths(edu.duke.FileResource,\ int)
comment1.text=\n\ Prints\ the\ number\ of\ total\ births\ for\ a\ given\ year\ of\ baby\ births.\n\n\ @param\ \ \ fr\ \ \ \ \ \ FileResource\ representing\ file\ of\ births\n\ @param\ \ \ mode\ \ \ \ int\ representing\ wheither\ to\ total\ all\ genders\ (0),\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ just\ girls\ (1),\ or\ just\ boys\ (2).\n\ @return\ \ \ \ \ \ \ \ \ \ int\ representing\ the\ total\ number\ of\ births\ in\ the\ file\n
comment10.params=
comment10.target=void\ testGetName()
comment10.text=\n\ Tests\ the\ method\ getName.\n
comment11.params=
comment11.target=void\ testWhatIsNameInYear()
comment11.text=\n\ Tests\ the\ method\ whatIsNameInYear.\n
comment12.params=
comment12.target=void\ testYearOfHighestRank()
comment12.text=\n\ Tests\ the\ method\ yearOfHighestRank.\n
comment13.params=
comment13.target=void\ testGetAverageRank()
comment13.text=\n\ Tests\ the\ method\ getAverageRank.\n
comment14.params=
comment14.target=void\ testGetTotalBirthsRankedHigher()
comment14.text=\n\ Tests\ the\ method\ getTotalBirthsRankedHigher.\n
comment15.params=args
comment15.target=void\ main(java.lang.String[])
comment2.params=fr\ name\ gender
comment2.target=int\ getRank(edu.duke.FileResource,\ java.lang.String,\ java.lang.String)
comment2.text=\n\ Returns\ the\ rank\ of\ the\ given\ name\ for\ the\ given\ gender\ in\ the\ given\ file.\n\n\ @param\ \ \ fr\ \ \ \ \ \ FileResource\ representing\ file\ of\ births\n\ @param\ \ \ name\ \ \ \ String\ representing\ name\ to\ match\n\ @param\ \ \ gender\ \ String\ representing\ gender\ to\ match\n\ @return\ \ \ \ \ \ \ \ \ \ int\ representing\ the\ rank\ of\ the\ given\ name\ in\ the\ file\n
comment3.params=fr\ rank\ gender
comment3.target=java.lang.String\ getName(edu.duke.FileResource,\ int,\ java.lang.String)
comment3.text=\n\ Returns\ the\ name\ of\ the\ given\ rank\ of\ the\ given\ gender\ in\ the\ given\ file.\n\n\ @param\ \ \ fr\ \ \ \ \ \ FileResource\ representing\ file\ of\ births\n\ @param\ \ \ rank\ \ \ \ int\ representing\ rank\ to\ match\n\ @param\ \ \ gender\ \ String\ representing\ gender\ to\ search\n\ @return\ \ \ \ \ \ \ \ \ \ String\ representing\ the\ name\ at\ the\ given\ rank\ for\ the\ given\ gender\n
comment4.params=fr1\ fr2\ name\ gender
comment4.target=java.lang.String\ whatIsNameInYear(edu.duke.FileResource,\ edu.duke.FileResource,\ java.lang.String,\ java.lang.String)
comment4.text=\n\ Returns\ the\ name\ from\ fr2\ that\ has\ the\ same\ rank\ as\ the\ given\ name\ in\ fr1.\n\n\ @param\ \ \ fr1\ \ \ \ \ FileResource\ representing\ file\ of\ births\ for\ initial\ name\n\ @param\ \ \ fr2\ \ \ \ \ FileResource\ representing\ file\ of\ births\ for\ year\ to\ find\ match\n\ @param\ \ \ name\ \ \ \ String\ representing\ name\ to\ match\n\ @param\ \ \ gender\ \ String\ representing\ gender\ to\ match\n\ @return\ \ \ \ \ \ \ \ \ \ String\ representing\ the\ name\ from\ fr2\ with\ the\ same\ rank\ as\ the\ given\ name\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ in\ fr1.\n
comment5.params=itr\ name\ gender
comment5.target=int\ yearOfHighestRank(java.lang.Iterable,\ java.lang.String,\ java.lang.String)
comment5.text=\n\ This\ method\ selects\ a\ range\ of\ files\ to\ process\ and\ returns\ an\ integer,\ the\ year\ with\ the\ \n\ highest\ rank\ for\ the\ name\ and\ gender.\n\n\ @param\ \ \ itr\ \ \ \ \ File\ iterable\ representing\ files\ to\ check\n\ @param\ \ \ name\ \ \ \ String\ representing\ name\ to\ match\n\ @param\ \ \ gender\ \ String\ representing\ gender\ to\ match\n\ @return\ \ \ \ \ \ \ \ \ \ int\ representing\ the\ year\ with\ the\ highest\ rank\ for\ the\ given\ name\ &\ gender\n
comment6.params=itr\ name\ gender
comment6.target=double\ getAverageRank(java.lang.Iterable,\ java.lang.String,\ java.lang.String)
comment6.text=\n\ This\ method\ selects\ a\ range\ of\ files\ to\ process\ and\ returns\ a\ double\ representing\ the\ average\n\ rank\ of\ the\ name\ and\ gender\ over\ the\ selected\ files.\n\n\ @param\ \ \ itr\ \ \ \ \ File\ iterable\ representing\ files\ to\ check\n\ @param\ \ \ name\ \ \ \ String\ representing\ name\ to\ match\n\ @param\ \ \ gender\ \ String\ representing\ gender\ to\ match\n\ @return\ \ \ \ \ \ \ \ \ \ double\ representing\ the\ average\ rank\ for\ given\ name\ and\ gender\n
comment7.params=itr\ year\ name\ gender
comment7.target=int\ getTotalBirthsRankedHigher(java.lang.Iterable,\ int,\ java.lang.String,\ java.lang.String)
comment7.text=\n\ This\ method\ returns\ an\ integer,\ the\ total\ number\ of\ births\ of\ those\ names\ with\ the\ same\ \n\ gender\ and\ same\ year\ who\ are\ ranked\ higher\ than\ name.\n\ \n\ Note\:\ if\ the\ year\ exists\ in\ files\ and\ the\ name\ does\ not\ exist\ for\ that\ gender\ in\ the\ file,\n\ it\ returns\ the\ total\ number\ of\ children\ born\ that\ year\ with\ the\ same\ gender.\n\n\ @param\ \ \ year\ \ \ \ int\ representing\ year\ to\ match\n\ @param\ \ \ name\ \ \ \ String\ representing\ name\ to\ match\n\ @param\ \ \ gender\ \ String\ representing\ gender\ to\ match\n\ @return\ \ \ \ \ \ \ \ \ \ int\ representing\ the\ the\ total\ number\ of\ births\n\ \n
comment8.params=
comment8.target=void\ testTotalBirths()
comment8.text=\n\ Tests\ the\ method\ totalBirths.\n
comment9.params=
comment9.target=void\ testGetRank()
comment9.text=\n\ Tests\ the\ method\ getRank.\n
numComments=16
